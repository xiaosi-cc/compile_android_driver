name: Android Kernel Driver Builder

on:
  workflow_dispatch:
    inputs:
      android_version:
        description: 'Android Version (Kernel) (e.g., 10)'
        required: true
        default: '10'
      kernel_version:
        description: 'Kernel Version (e.g., 4.14)'
        required: true
        default: '4.14'
      driver_name:
        description: 'Driver Module Name (e.g., mydriver.ko)'
        required: true
      target_arch:
        description: 'Target Architecture (aarch64, arm, x86_64, etc.)'
        required: true
        default: 'aarch64'

jobs:
  build:
    runs-on: ubuntu-20.04  # 使用较旧的Ubuntu版本以兼容老工具链
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        
      - name: Prepare kerneldriver directory
        run: |
          mkdir -p kerneldriver
          # 复制所有驱动相关文件
          find ./code -name "*.h" -exec cp {} kerneldriver/ \;
          find ./code -name "*.c" -exec cp {} kerneldriver/ \;
          if [ -f ./code/Makefile ]; then
            cp ./code/Makefile kerneldriver/
          fi
          
      - name: Install repo tool
        run: |
          sudo curl -L https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo
          sudo chmod a+x /usr/local/bin/repo

      - name: Set up Android Kernel source
        run: |
          mkdir -p android-kernel && cd android-kernel
          # 使用Android 10对应的4.14稳定分支
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android-4.14-stable
          repo sync -j$(nproc) -c --no-tags --optimized-fetch --force-sync

      - name: Copy kerneldriver
        run: |
          cd android-kernel
          cp -r ../kerneldriver common/drivers/

      - name: Modify Makefile
        run: |
          cd android-kernel
          # 在drivers/Makefile中添加驱动目录
          if ! grep -q "kerneldriver" common/drivers/Makefile; then
            echo "obj-\$(CONFIG_KERNELDRIVER) += kerneldriver/" >> common/drivers/Makefile
          fi

      - name: Create Kconfig for driver
        run: |
          cd android-kernel/common/drivers/kerneldriver
          # 创建简单的Kconfig文件
          cat > Kconfig << 'EOF'
          config KERNELDRIVER
          tristate "Custom Kernel Driver"
          default m
          help
            This is a custom kernel driver.
          EOF

      - name: Add driver to Kconfig menu
        run: |
          cd android-kernel
          # 在drivers/Kconfig末尾添加source
          if ! grep -q "kerneldriver" common/drivers/Kconfig; then
            echo "source \"drivers/kerneldriver/Kconfig\"" >> common/drivers/Kconfig
          fi

      - name: Prepare module list for Android 10
        run: |
          cd android-kernel
          # 对于Android 10，使用传统的模块列表文件
          MODULE_PATH="drivers/kerneldriver/${{ github.event.inputs.driver_name }}"
          if [ "${{ github.event.inputs.target_arch }}" = "aarch64" ]; then
            echo "$MODULE_PATH" >> common/android/gki_aarch64_modules
          elif [ "${{ github.event.inputs.target_arch }}" = "arm" ]; then
            echo "$MODULE_PATH" >> common/android/gki_arm_modules
          elif [ "${{ github.event.inputs.target_arch }}" = "x86_64" ]; then
            echo "$MODULE_PATH" >> common/android/gki_x86_64_modules
          fi

      - name: Increase stack frame size limit
        run: |
          cd android-kernel
          # 增加栈帧大小限制以避免编译错误
          find . -type f -name "Makefile*" -exec sed -i 's/-Wframe-larger-than=[0-9]*/-Wframe-larger-than=4096/g' {} + || true
          if ! grep -q "FRAME_WARN" common/Makefile; then
            echo 'KBUILD_CFLAGS += -Wframe-larger-than=4096' >> common/Makefile
          fi

      - name: Install dependencies for Android 10
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential flex bison libssl-dev libelf-dev bc python2.7
          # 创建python2符号链接
          sudo ln -sf /usr/bin/python2.7 /usr/bin/python2
          sudo ln -sf /usr/bin/python2.7 /usr/bin/python

      - name: Set up build environment
        run: |
          cd android-kernel
          # 设置构建环境变量
          export ARCH=${{ github.event.inputs.target_arch }}
          if [ "$ARCH" = "aarch64" ]; then
            export CROSS_COMPILE=aarch64-linux-android-
          elif [ "$ARCH" = "arm" ]; then
            export CROSS_COMPILE=arm-linux-androideabi-
          fi

      - name: Build kernel module for Android 10
        run: |
          cd android-kernel
          # 对于Android 10使用传统构建系统
          BUILD_CONFIG=common/build.config.gki.${{ github.event.inputs.target_arch }} build/build.sh
          
          # 查找生成的模块文件
          find . -name "${{ github.event.inputs.driver_name }}" -type f | head -1
          echo "OUTPUT_PATH=out/android${{ github.event.inputs.android_version }}-${{ github.event.inputs.kernel_version }}" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: kernel-driver-${{ github.event.inputs.target_arch }}-android10
          path: |
            android-kernel/${{ env.OUTPUT_PATH }}
          retention-days: 7
